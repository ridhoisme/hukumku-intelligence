/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as IndexImport } from './routes/index'
import { Route as LayoutSearchImport } from './routes/_layout/_search'
import { Route as LayoutTopicTabImport } from './routes/_layout/topic.$tab'
import { Route as LayoutLocationTabImport } from './routes/_layout/location.$tab'
import { Route as LayoutLawyerTabImport } from './routes/_layout/lawyer.$tab'
import { Route as LayoutJudgeTabImport } from './routes/_layout/judge.$tab'
import { Route as LayoutGeneralTabImport } from './routes/_layout/general.$tab'
import { Route as LayoutSearchSearchImport } from './routes/_layout/_search/search'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LayoutSearchRoute = LayoutSearchImport.update({
  id: '/_search',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTopicTabRoute = LayoutTopicTabImport.update({
  id: '/topic/$tab',
  path: '/topic/$tab',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutLocationTabRoute = LayoutLocationTabImport.update({
  id: '/location/$tab',
  path: '/location/$tab',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutLawyerTabRoute = LayoutLawyerTabImport.update({
  id: '/lawyer/$tab',
  path: '/lawyer/$tab',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutJudgeTabRoute = LayoutJudgeTabImport.update({
  id: '/judge/$tab',
  path: '/judge/$tab',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutGeneralTabRoute = LayoutGeneralTabImport.update({
  id: '/general/$tab',
  path: '/general/$tab',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSearchSearchRoute = LayoutSearchSearchImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => LayoutSearchRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/_search': {
      id: '/_layout/_search'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutSearchImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/_search/search': {
      id: '/_layout/_search/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof LayoutSearchSearchImport
      parentRoute: typeof LayoutSearchImport
    }
    '/_layout/general/$tab': {
      id: '/_layout/general/$tab'
      path: '/general/$tab'
      fullPath: '/general/$tab'
      preLoaderRoute: typeof LayoutGeneralTabImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/judge/$tab': {
      id: '/_layout/judge/$tab'
      path: '/judge/$tab'
      fullPath: '/judge/$tab'
      preLoaderRoute: typeof LayoutJudgeTabImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/lawyer/$tab': {
      id: '/_layout/lawyer/$tab'
      path: '/lawyer/$tab'
      fullPath: '/lawyer/$tab'
      preLoaderRoute: typeof LayoutLawyerTabImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/location/$tab': {
      id: '/_layout/location/$tab'
      path: '/location/$tab'
      fullPath: '/location/$tab'
      preLoaderRoute: typeof LayoutLocationTabImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/topic/$tab': {
      id: '/_layout/topic/$tab'
      path: '/topic/$tab'
      fullPath: '/topic/$tab'
      preLoaderRoute: typeof LayoutTopicTabImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutSearchRouteChildren {
  LayoutSearchSearchRoute: typeof LayoutSearchSearchRoute
}

const LayoutSearchRouteChildren: LayoutSearchRouteChildren = {
  LayoutSearchSearchRoute: LayoutSearchSearchRoute,
}

const LayoutSearchRouteWithChildren = LayoutSearchRoute._addFileChildren(
  LayoutSearchRouteChildren,
)

interface LayoutRouteChildren {
  LayoutSearchRoute: typeof LayoutSearchRouteWithChildren
  LayoutGeneralTabRoute: typeof LayoutGeneralTabRoute
  LayoutJudgeTabRoute: typeof LayoutJudgeTabRoute
  LayoutLawyerTabRoute: typeof LayoutLawyerTabRoute
  LayoutLocationTabRoute: typeof LayoutLocationTabRoute
  LayoutTopicTabRoute: typeof LayoutTopicTabRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutSearchRoute: LayoutSearchRouteWithChildren,
  LayoutGeneralTabRoute: LayoutGeneralTabRoute,
  LayoutJudgeTabRoute: LayoutJudgeTabRoute,
  LayoutLawyerTabRoute: LayoutLawyerTabRoute,
  LayoutLocationTabRoute: LayoutLocationTabRoute,
  LayoutTopicTabRoute: LayoutTopicTabRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof LayoutSearchRouteWithChildren
  '/search': typeof LayoutSearchSearchRoute
  '/general/$tab': typeof LayoutGeneralTabRoute
  '/judge/$tab': typeof LayoutJudgeTabRoute
  '/lawyer/$tab': typeof LayoutLawyerTabRoute
  '/location/$tab': typeof LayoutLocationTabRoute
  '/topic/$tab': typeof LayoutTopicTabRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof LayoutSearchRouteWithChildren
  '/search': typeof LayoutSearchSearchRoute
  '/general/$tab': typeof LayoutGeneralTabRoute
  '/judge/$tab': typeof LayoutJudgeTabRoute
  '/lawyer/$tab': typeof LayoutLawyerTabRoute
  '/location/$tab': typeof LayoutLocationTabRoute
  '/topic/$tab': typeof LayoutTopicTabRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/_search': typeof LayoutSearchRouteWithChildren
  '/_layout/_search/search': typeof LayoutSearchSearchRoute
  '/_layout/general/$tab': typeof LayoutGeneralTabRoute
  '/_layout/judge/$tab': typeof LayoutJudgeTabRoute
  '/_layout/lawyer/$tab': typeof LayoutLawyerTabRoute
  '/_layout/location/$tab': typeof LayoutLocationTabRoute
  '/_layout/topic/$tab': typeof LayoutTopicTabRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/search'
    | '/general/$tab'
    | '/judge/$tab'
    | '/lawyer/$tab'
    | '/location/$tab'
    | '/topic/$tab'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/search'
    | '/general/$tab'
    | '/judge/$tab'
    | '/lawyer/$tab'
    | '/location/$tab'
    | '/topic/$tab'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/_layout/_search'
    | '/_layout/_search/search'
    | '/_layout/general/$tab'
    | '/_layout/judge/$tab'
    | '/_layout/lawyer/$tab'
    | '/_layout/location/$tab'
    | '/_layout/topic/$tab'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/_search",
        "/_layout/general/$tab",
        "/_layout/judge/$tab",
        "/_layout/lawyer/$tab",
        "/_layout/location/$tab",
        "/_layout/topic/$tab"
      ]
    },
    "/_layout/_search": {
      "filePath": "_layout/_search.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/_search/search"
      ]
    },
    "/_layout/_search/search": {
      "filePath": "_layout/_search/search.tsx",
      "parent": "/_layout/_search"
    },
    "/_layout/general/$tab": {
      "filePath": "_layout/general.$tab.tsx",
      "parent": "/_layout"
    },
    "/_layout/judge/$tab": {
      "filePath": "_layout/judge.$tab.tsx",
      "parent": "/_layout"
    },
    "/_layout/lawyer/$tab": {
      "filePath": "_layout/lawyer.$tab.tsx",
      "parent": "/_layout"
    },
    "/_layout/location/$tab": {
      "filePath": "_layout/location.$tab.tsx",
      "parent": "/_layout"
    },
    "/_layout/topic/$tab": {
      "filePath": "_layout/topic.$tab.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
